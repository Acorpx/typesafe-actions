// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should correctly assert for an array with 1 arg actual (type) should match snapshot 1`] = `"TH.EmptyAction<\\"WITH_TYPE_ONLY\\">[]"`;

exports[`should correctly assert for an array with 2 args actual (type) should match snapshot 1`] = `"(TH.EmptyAction<\\"WITH_TYPE_ONLY\\"> | TH.PayloadAction<\\"WITH_PAYLOAD\\", number>)[]"`;

exports[`should correctly assert for an array with 3 args actual (type) should match snapshot 1`] = `"(TH.EmptyAction<\\"WITH_TYPE_ONLY\\"> | TH.PayloadAction<\\"WITH_PAYLOAD\\", number> | TH.PayloadMetaAction<\\"WITH_PAYLOAD_META\\", number, string>)[]"`;

exports[`should correctly assert for an array with 4 args actual (type) should match snapshot 1`] = `"(TH.EmptyAction<\\"WITH_TYPE_ONLY\\"> | TH.PayloadAction<\\"WITH_PAYLOAD\\", number> | TH.PayloadAction<\\"WITH_MAPPED_PAYLOAD\\", number> | TH.PayloadMetaAction<\\"WITH_PAYLOAD_META\\", number, string>)[]"`;

exports[`should correctly assert for an array with 5 args actual (type) should match snapshot 1`] = `"(TH.EmptyAction<\\"WITH_TYPE_ONLY\\"> | TH.PayloadAction<\\"WITH_PAYLOAD\\", number> | TH.PayloadAction<\\"WITH_MAPPED_PAYLOAD\\", number> | TH.PayloadMetaAction<\\"WITH_PAYLOAD_META\\", number, string> | TH.PayloadMetaAction<\\"WITH_MAPPED_PAYLOAD_META\\", number, string>)[]"`;

exports[`should correctly assert type with "any" action action (type) should match snapshot 1`] = `"TH.PayloadAction<\\"WITH_PAYLOAD\\", number> | TH.PayloadMetaAction<\\"WITH_PAYLOAD_META\\", number, string>"`;

exports[`should correctly assert type with "any" action action (type) should match snapshot 2`] = `"TH.PayloadAction<\\"WITH_PAYLOAD\\", number> | TH.PayloadMetaAction<\\"WITH_PAYLOAD_META\\", number, string>"`;

exports[`should work with multiple action-creator args isActionOf([withTypeOnly, withPayload])(mappedPayloadAction) (type) should match snapshot 1`] = `"boolean"`;

exports[`should work with multiple action-creator args isActionOf([withTypeOnly, withPayload])(payloadAction) (type) should match snapshot 1`] = `"boolean"`;

exports[`should work with multiple action-creator args isActionOf([withTypeOnly, withPayload])(typeOnlyAction) (type) should match snapshot 1`] = `"boolean"`;

exports[`should work with multiple action-creator args isActionOf([withTypeOnly, withPayload], mappedPayloadAction) (type) should match snapshot 1`] = `"boolean"`;

exports[`should work with multiple action-creator args isActionOf([withTypeOnly, withPayload], payloadAction) (type) should match snapshot 1`] = `"boolean"`;

exports[`should work with multiple action-creator args isActionOf([withTypeOnly, withPayload], typeOnlyAction) (type) should match snapshot 1`] = `"boolean"`;

exports[`should work with single action-creator arg isActionOf([withTypeOnly])(payloadAction) (type) should match snapshot 1`] = `"boolean"`;

exports[`should work with single action-creator arg isActionOf([withTypeOnly])(typeOnlyAction) (type) should match snapshot 1`] = `"boolean"`;

exports[`should work with single action-creator arg isActionOf([withTypeOnly], payloadAction) (type) should match snapshot 1`] = `"boolean"`;

exports[`should work with single action-creator arg isActionOf([withTypeOnly], typeOnlyAction) (type) should match snapshot 1`] = `"boolean"`;

exports[`should work with single action-creator arg isActionOf(withTypeOnly)(payloadAction) (type) should match snapshot 1`] = `"boolean"`;

exports[`should work with single action-creator arg isActionOf(withTypeOnly)(typeOnlyAction) (type) should match snapshot 1`] = `"boolean"`;

exports[`should work with single action-creator arg isActionOf(withTypeOnly, payloadAction) (type) should match snapshot 1`] = `"boolean"`;

exports[`should work with single action-creator arg isActionOf(withTypeOnly, typeOnlyAction) (type) should match snapshot 1`] = `"boolean"`;
